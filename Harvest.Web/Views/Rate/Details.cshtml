@using Harvest.Core.Extensions
@using System.Text.Json
@model Harvest.Web.Models.RateModels.RateDetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details for Team: @Model.TeamName</h1>

<div>
    <h4>Rate</h4>
    <hr />
    @await Html.PartialAsync("_RateDetails", Model)
</div>
@if(Model.Rate.IsActive && (Model.Rate.Type == Rate.Types.Equipment || Model.Rate.Type == Rate.Types.Other))
{
    <div>
        <button id="rate-qr-button" class="btn btn-primary" onclick="showRateQRCode()">
            <i class="fas fa-qrcode"></i> Generate QR Code
        </button>
    </div>
    <br />
}
<div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Rate.Id }) |
    <a asp-action="Index">Back to List</a>
</div>

@* React component placeholder for QR Code *@
<div id="rate-qr-container" style="display: none;"></div>

@* Pass server data to JavaScript *@
<script>
    window.rateQRData = @Html.Raw(JsonSerializer.Serialize(new { 
        rateData = new { 
            id = Model.Rate.Id, 
            description = Model.Rate.Description,
            type = Model.Rate.Type,
            price = Model.Rate.Price,
            unit = Model.Rate.Unit ?? "",
            isPassthrough = Model.Rate.IsPassthrough
        },
        teamSlug = Model.TeamSlug,
        teamName = Model.TeamName
    }));

    function showRateQRCode() {
        if (window.HarvestMvcHelpers && window.HarvestMvcHelpers.mountRateQRCode) {
            window.HarvestMvcHelpers.mountRateQRCode({
                rateData: window.rateQRData.rateData,
                teamSlug: window.rateQRData.teamSlug,
                teamName: window.rateQRData.teamName,
                containerId: 'rate-qr-container'
            });
        } else {
            console.error('HarvestMvcHelpers not loaded. Make sure React app is running.');
            alert('QR Code functionality is not available. Please ensure the application is fully loaded.');
        }
    }
</script>

@section Styles
{
    @{ await Html.RenderPartialAsync("_FaStylesPartial"); }
}
