@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Configuration
@using Harvest.Core.Services
@using Harvest.Core.Models
@inject IConfiguration Configuration
@inject IUserService UserService
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Harvest</title>

    <environment exclude="Development">
        @* In a production deployment, we will use a dynamic view component to load the generated styles *@
        <cache expires-after="@TimeSpan.FromMinutes(30)">
            @await Component.InvokeAsync("DynamicStyles")
        </cache>
    </environment>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
    integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
    crossorigin="" />

    @* Optionally can be done by including node_modules/leaflet-draw/dist/leaflet.draw.css in module *@
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css"/>

    @RenderSection("Styles", required: false)
</head>

<body>
    <div class="page-wrap">
        <header>
            <div class="container">
            @if (Configuration["Environment:ShowTestBanner"] == "Yes")
            {
                <h1 style="background-color: red; text-align: center; color: white">----------- Beta Testing. Data will not
                    be retained. -----------</h1>
            }
                <div class="row justify-content-between align-items-end">
                    <div class="col-sm-8 col-md-5 col-xl-4">
                        <a asp-area="" asp-controller="Home" asp-action="Index">
                            <h1>Harvest</h1>
                            <p class="subtitle">Planting tomorrow's crops today</p>
                        </a>
                    </div>
                    <div class="text-right col-sm-4">
                        <a target="_blank" href="https://ucdavis.edu">
                        <img class="img-fluid" src="/media/ucdavis_white_logo.svg" alt="UC Davis Logo"></a>
                    </div>
                </div>
        </div>
        </header>
        <div class="nav-wrapper">
        <nav class="navbar navbar-expand-md nav container">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarCollapse"
                aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarCollapse">
                <ul class="navbar-nav mr-auto">
                    @if (await UserService.HasAccess(AccessCodes.SupervisorAccess))
                    {
                    <li class="nav-item active">
                        <a class="nav-link" href="/project">Projects</a>
                    </li>
                    }
                    else
                    {
                        <li class="nav-item active">
                            <a class="nav-link" href="/project/mine">My Projects</a>
                        </li>
                    }
                    
                    @if (await UserService.HasAccess(AccessCodes.FieldManagerAccess))
                    {
                        <li class="nav-item">
                            <a asp-controller="Permissions" asp-action="Index" class="nav-link">Permissions</a>
                        </li>
                        <li class="nav-item">
                            <a asp-controller="Rate" asp-action="Index" class="nav-link">Rates</a>
                        </li>
                    }
                    @if (await UserService.HasAccess(AccessCodes.WorkerAccess))
                    {
                        <li class="nav-item">
                            <a asp-controller="Expense" asp-action="Entry" class="nav-link">Expenses</a>
                        </li>
                    }
                    <li class="nav-item">
                        <a asp-controller="TempInvoice" asp-action="Index" asp-route-projectId="5" class="nav-link">Invoices (sample)</a>
                    </li>
                </ul>
                <div class="mt-2 mt-md-0">
                    Welcome @User.GetNameClaim()
                </div>
            </div>
        </nav>
        </div>
        @if (!string.IsNullOrWhiteSpace(TempData["ErrorMessage"] as string))
        {
            <div class="container">
                <div class="alert alert-danger">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="fas fa-times"></i>
                    </button> @TempData["ErrorMessage"]
                </div>
            </div>
        }
        @if (!string.IsNullOrWhiteSpace(TempData["Message"] as string))
        {
            <div class="container">
                <div class="alert alert-info">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="fas fa-times"></i>
                    </button> @TempData["Message"]
                </div>
            </div>
        }

        <main role="main" class="main-content-wrapper container">
            @RenderBody()
        </main>
    </div>
    <footer class="container footer">
        <p>Copyright &copy; <span id="copywrite-year"></span> The Regents of the University of California, Davis campus.
            All rights reserved.</p>
    </footer>


    <script>
        var Harvest = { user: {} };
        Harvest.user.detail = @Html.Raw(Context.GetUserDetails());
        Harvest.user.roles = @Html.Raw(await Context.GetUserRoles());
    </script>

    <environment include="Development">
        <script src="~/lib/jquery/jquery.js"></script>
        @* NOTE: These are auto generated by CRA/ClientApp and will load in our SASS/CSS plus other libraries and will
            fast reload changes.
        *@
        <script src="/static/js/bundle.js"></script>
        <script src="/static/js/vendors~main.chunk.js"></script>
        <script src="/static/js/main.chunk.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.6.0.min.js"
                asp-fallback-src="~/lib/jquery/jquery.js"
                asp-fallback-test="window.jQuery"
                crossorigin="anonymous"
                integrity="sha384-vtXRMe3mGCbOeY7l30aIg8H9p3GdeSe4IFlP6G8JMa7o7lXvnz3GFKzPxzJdPfGK">
        </script>
        @* In a production deployment, we will use a dynamic view component to load the generated scripts *@
        <cache expires-after="@TimeSpan.FromMinutes(30)">
            @await Component.InvokeAsync("DynamicScripts")
        </cache>
    </environment>

    @RenderSection("Scripts", required: false)
</body>

</html>